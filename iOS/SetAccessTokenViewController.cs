// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Threading.Tasks;
using Foundation;
using MyIssues.DataAccess;
using UIKit;

namespace MyIssues.iOS
{
	public partial class SetAccessTokenViewController : UIViewController
	{
		public SetAccessTokenViewController (IntPtr handle) : base (handle)
		{
		}

		string accessToken;
		Storage _storage;
		public override async void ViewDidLoad()
		{
			base.ViewDidLoad();

			_storage = MyIssues.DataAccess.Storage.GetInstance();
			accessToken = await _storage.GetToken() ?? "3282fb0f86f8063f8c8dfb1e3f0df2b839f1f298";

		}

		public override async void ViewDidAppear(bool animated)
		{
			base.ViewDidAppear(animated);
			tokenTextView.Text = accessToken;
			if (accessToken != null && await Authenticate(accessToken))
			{
				//NavigateToRepoSelection();
				tokenTextView.Text += "Auth";
			}
			else 
			{ 
				tokenTextView.Text = "NOT";
			}
			//_setAccessTokenButton.Click += AuthenticateButton_Click;

			//_learnMoreButton.Click += (sender, e) =>
			//{
			//	var browserIntent = new Intent(Intent.ActionView, Android.Net.Uri.Parse("http://thatcsharpguy.com/apps/myissues#personal-access-token"));
			//	StartActivity(browserIntent);
			//};
		}


        async Task<bool> Authenticate(string accessToken)
		{
			//ProgressDialog progress;
			//progress = ProgressDialog.Show(this, Resources.GetString(Resource.String.Authenticating),
			//							   Resources.GetString(Resource.String.PleaseWait), true);
			var cliente = GitHubClientFactory.CreateClient(accessToken);
			var authed = await _storage.SetClient(cliente);

                System.Diagnostics.Debug.WriteLine("Authenticate");
			if (authed)
			{
				await _storage.SaveToken(accessToken);
			}

			//progress.Dismiss();
			return authed;
		}


	}
}
